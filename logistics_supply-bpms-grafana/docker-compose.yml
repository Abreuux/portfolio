version: '3.8'

services:
  # Database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: logistics_user
      POSTGRES_PASSWORD: logistics_password
      POSTGRES_DB: logistics_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U logistics_user -d logistics_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_NAME=logistics_db
      - DB_USER=logistics_user
      - DB_PASSWORD=logistics_password
      - PYTHONPATH=/app
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

  # Dashboard
  dashboard:
    build: 
      context: .
      dockerfile: Dockerfile.dashboard
    ports:
      - "8050:8050"
    environment:
      - API_URL=http://api:8000
      - PYTHONPATH=/app
    volumes:
      - .:/app
    depends_on:
      - api

  # ETL Service
  etl:
    build:
      context: .
      dockerfile: Dockerfile.etl
    environment:
      - DB_HOST=postgres
      - DB_NAME=logistics_db
      - DB_USER=logistics_user
      - DB_PASSWORD=logistics_password
      - PYTHONPATH=/app
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

  # Airflow
  airflow-webserver:
    image: apache/airflow:2.1.3
    command: webserver
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://logistics_user:logistics_password@postgres:5432/logistics_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      postgres:
        condition: service_healthy

  airflow-scheduler:
    image: apache/airflow:2.1.3
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://logistics_user:logistics_password@postgres:5432/logistics_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - airflow-webserver

  # Redis for caching
  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Prefect server for workflow management
  prefect:
    image: prefecthq/prefect:1.1.0
    ports:
      - "4200:4200"
    environment:
      - PREFECT__BACKEND=server
      - PREFECT__SERVER__HOST=0.0.0.0
      - PREFECT__SERVER__PORT=4200
    depends_on:
      - postgres

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana for visualization
  grafana:
    image: grafana/grafana:8.2.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 